==== Subversion

(((Subversion)))
(((Importing, from Subversion)))
Якщо ви прочитали попередню секцію про використання `git svn`, то можете легко використати ті інструкції, щоб `git svn clone` репозиторій; потім, припиніть користуватися сервером Subversion, надішліть все до нового сервера Git, та почніть ним користуватись.
Якщо вам потрібна історія, то можете швидко цього досягнути, з такою ж швидкістю, як можете дістати дані зі сервера Subversion (що може зайняти деякий час).

Втім, імпортування не бездоганно: і через те, що займе так багато часу, ви можете зробити його правильно.
Першою проблемою є інформація про авторів.
У Subversion, кожна особа, яка створює коміти, має користувача в системі, якого записано в інформації коміту.
Приклади з попередньої секції показують `schacon` у деяких місцях, як і вивід `blame` та `git svn log`.
Якщо ви бажаєте відобразити це до кращих даних про автора Git, вам потрібно відображення користувачів Subversion до авторів Git.
Створіть файл під назвою `users.txt`, який містить це відображення в такому форматі:

[source]
----
schacon = Scott Chacon <schacon@geemail.com>
selse = Someo Nelse <selse@geemail.com>
----

Щоб отримати список імен авторів, які використовує SVN, ви можете виконати наступне:

[source,console]
----
$ svn log --xml | grep author | sort -u | \
  perl -pe 's/.*>(.*?)<.*/$1 = /'
----

Це створює вивід журналу у форматі XML, потім залишає лише рядки з даними про авторів, відкидає повтори, позбувається теґів XML.
(Очевидно, це працює лише на машині зі встановленними `grep`, `sort` та `perl`.)
Потім, перенаправляє цей вивід до файлу users.txt, щоб ви могли додати відповідні дані про користувачів Git навпроти кожного пункту.

Ви можете надати цей файл `git svn`, щоб допомогти йому відобразити дані авторів точніше.
Ви також можете сказати `git svn` не включати метадані, які Subversion зазвичай імпортує, якщо передасте `--no-metadata` командам `clone` чи `init`.
Тоді команда `import` виглядатиме так:

[source,console]
----
$ git svn clone http://my-project.googlecode.com/svn/ \
      --authors-file=users.txt --no-metadata -s my_project
----

Тепер у вас буде ліпший імпорт Subversion у директорії `my_project`.
Замість комітів, що виглядають так

[source]
----
commit 37efa680e8473b615de980fa935944215428a35a
Author: schacon <schacon@4c93b258-373f-11de-be05-5f7a86268029>
Date:   Sun May 3 00:12:22 2009 +0000

    fixed install - go to trunk

    git-svn-id: https://my-project.googlecode.com/svn/trunk@94 4c93b258-373f-11de-
    be05-5f7a86268029
----

вони виглядатимуть так:

[source]
----
commit 03a8785f44c8ea5cdb0e8834b7c8e6c469be2ff2
Author: Scott Chacon <schacon@geemail.com>
Date:   Sun May 3 00:12:22 2009 +0000

    fixed install - go to trunk
----

Не лише поле з автором виглядає набагато краще, а й більше немає `git-svn-id`.

Також варто трохи прибрати після імпортування.
По-перше, треба вичистити дивні посилання, які налаштував `git svn`.
Спершу, ми перемістимо теґи, щоб вони стали справжніми теґами, а не дивними віддаленими гілками, а потім перемістимо решту гілок, щоб вони стали локальними.

Щоб перемістити теґи до належних теґів Git, виконайте

[source,console]
----
$ cp -Rf .git/refs/remotes/origin/tags/* .git/refs/tags/
$ rm -Rf .git/refs/remotes/origin/tags
----

Це бере посилання, які були віддаленими гілками, що починались з `remotes/origin/tags/` та перетворює їх на справжні (легкі) теґи.

Далі, перемістить решту посилань під `refs/remotes` до локальних гілок:

[source,console]
----
$ cp -Rf .git/refs/remotes/* .git/refs/heads/
$ rm -Rf .git/refs/remotes
----

Тепер усі старі гілки стали справжніми гілками Git, та всі старі теґи стали справжніми теґами Git.
Залишилось лише додати новий сервер Git як віддалене сховище та надіслати до нього.
Ось приклад додавання сервера як віддаленого:

[source,console]
----
$ git remote add origin git@my-git-server:myrepository.git
----

Оскільки ви бажаєте надіслати всі гілки та теґи, то можете виконати наступне:

[source,console]
----
$ git push origin --all
----

Усі ваші гілки та теґи мають бути на новому сервері Git гарно, чисто імпортовані.
