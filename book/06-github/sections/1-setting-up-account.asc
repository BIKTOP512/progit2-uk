//=== Account Setup and Configuration
=== Створення та Налаштування Облікового Запису

(((GitHub, user accounts)))
//The first thing you need to do is set up a free user account.
Спершу вам треба створити безкоштовний обліковий запис.
//Simply visit https://github.com[], choose a user name that isn't already taken, provide an email address and a password, and click the big green ``Sign up for GitHub'' button.
Просто зайдіть до https://github.com[], оберіть ім’я користувача, якого ще ні в кого немає, надайте адресу електронної пошти та пароль, натисніть на велику зелену кнопку ``Sign up for Github'' (Зареєструватись на Github).

//.The GitHub sign-up form.
.Форма реєстрації GitHub.
//image::images/signup.png[The GitHub sign-up form.]
image::images/signup.png[Форма реєстрації GitHub.]

//The next thing you'll see is the pricing page for upgraded plans, but it's safe to ignore this for now.
Далі ви побачите сторінку з розцінками додаткових планів, проте зараз ми можемо це проігнорувати.
//GitHub will send you an email to verify the address you provided.
GitHub відправить вам листа щоб перевірити адресу, що ви надали.
//Go ahead and do this, it's pretty important (as we'll see later).
Виконайте інструкції в листі - це доволі важливо (як ми потім побачимо).

[NOTE]
====
//GitHub provides all of its functionality with free accounts, with the limitation that all of your projects are fully public (everyone has read access).
GitHub надає вам увесь свій функціонал безкоштовно, з обмеженням, що всі ваші проекти повністю публічні (усі мають доступ на читання).
//GitHub's paid plans include a set number of private projects, but we won't be covering those in this book.
Оплачувані плани пропонують фіксоване число приватних проектів, проте ми не будемо це розглядати в даній книзі.
====

//Clicking the Octocat logo at the top-left of the screen will take you to your dashboard page.
Логотип Octocat зліва зверху проведе вас до вашої дошки керування.
//You're now ready to use GitHub.
Ви тепер готові використовувати GitHub.

//==== SSH Access
==== SSH Доступ

(((SSH keys, with GitHub)))
//As of right now, you're fully able to connect with Git repositories using the `https://` protocol, authenticating with the username and password you just set up.
Наразі, ви здатні авторизуватися щойно створеними ім’ям та паролем та зв’язуватися з Git сховищами за допомогою протоколу `https://`.
//However, to simply clone public projects, you don't even need to sign up - the account we just created comes into play when we fork projects and push to our forks a bit later.
Втім, щоб просто клонувати публічні проекти, вам не треба було навіть реєструватися - щойно створений обліковий запис стає в нагоді, коли ми будемо відокремлювати проекти та викладати до них зміни.

//If you'd like to use SSH remotes, you'll need to configure a public key.
Якщо ви будете використовувати віддалені сховища через SSH, вам потрібно задати публічний ключ.
//(If you don't already have one, see <<_generate_ssh_key>>.)
(Якщо у вас його нема, дивіться <<_generate_ssh_key>>.)
//Open up your account settings using the link at the top-right of the window:
Відкрийте налаштування облікового запису (account settings) за допомогою посилання в правому верхньому куту вікна:

//.The ``Account settings'' link.
.Посилання на налаштування облікового запису (``Account settings'').
//image::images/account-settings.png[The ``Account settings'' link.]
image::images/account-settings.png[Посилання на налаштування облікового запису (``Account settings'').]

//Then select the ``SSH keys'' section along the left-hand side.
Оберіть секцію ``SSH keys'' (SSH ключі) з лівого боку.

//.The ``SSH keys'' link.
.Посилання ``SSH keys'' (SSH ключі).
image::images/ssh-keys.png[Посилання ``SSH keys'' (SSH ключі).]

//From there, click the "`Add an SSH key`" button, give your key a name, paste the contents of your `~/.ssh/id_rsa.pub` (or whatever you named it) public-key file into the text area, and click ``Add key''.
Далі, натисніть кнопку ``Add an SSH key'' (додати SSH ключ), назвіть ваш ключ, та вставте вміст вашого файлу з публічним ключем `~/.ssh/id_rsa.pub` (якщо ви не змінювали назву) до текстового поля, та натисніть ``Add key'' (додати ключ).

[NOTE]
====
//Be sure to name your SSH key something you can remember. You can name each of your keys (e.g. "My Laptop" or "Work Account") so that if you need to revoke a key later, you can easily tell which one you're looking for.
Обов’язково називайте свої SSH ключі розважливо. Ви можете назвати кожен з ваших ключів (наприклад "Мій Ноутбук" чи "Машина на Роботі") так, щоб якщо ви захочете скасувати якийсь потім, ви легко могли знайти потрібний вам ключ.
====

[[_personal_avatar]]
//==== Your Avatar
==== Ваш Аватар

//Next, if you wish, you can replace the avatar that is generated for you with an image of your choosing. First go to the ``Profile'' tab (above the SSH Keys tab) and click ``Upload new picture''.
Далі, якщо ви бажаєте, можете змінити згенерований аватар обраним вами зображенням. Спершу перейдіть до вкладки ``Profile'' (профіль, над вкладкою SSH ключі) та натисніть ``Upload new picture'' (Відвантажити нове зображення).

//.The ``Profile'' link.
.Посилання на ``Profile'' (профіль).
image::images/your-profile.png[Посилання на ``Profile'' (профіль).]

//We'll choose a copy of the Git logo that is on our hard drive and then we get a chance to crop it.
Ми оберемо копію логотипу Git, що вже є на нашому жорсткому диску та потім зможемо обрізати зображення.

//.Crop your avatar
.Обрізати ваш аватар
//image::images/avatar-crop.png[Crop your uploaded avatar.]
image::images/avatar-crop.png[Обрізати ваш аватар.]

//Now anywhere you interact on the site, people will see your avatar next to your username.
Тепер всюди, де ви будете щось робити на сайті, інші побачать ваш аватар біля вашого імені.

//If you happen to have uploaded an avatar to the popular Gravatar service (often used for Wordpress accounts), that avatar will be used by default and you don't need to do this step.
Якщо ж ви відвантажили аватар до популярного сервісу Gravatar (часто використовується для облікових записів Wordpress), то аватар буде використано автоматично, і вам цей крок не потрібен.

//==== Your Email Addresses
==== Ваші Поштові Адреси

//The way that GitHub maps your Git commits to your user is by email address.
GitHub визначає, що ваші коміти до Git є вашими через поштову адресу.
//If you use multiple email addresses in your commits and you want GitHub to link them up properly, you need to add all the email addresses you have used to the Emails section of the admin section.
Якщо ви використовуєте декілька електронних адрес для комітів, та бажаєте, щоб GitHub усіх їх пов’язував з вами, додайте всі адреси, що ви використовуєте до секції Emails в адміністративній секції.

[[_add_email_addresses]]
//.Add email addresses
.Додавання електронних адрес
//image::images/email-settings.png[Add all your email addresses.]
image::images/email-settings.png[Додавання електронних адрес.]

//In <<_add_email_addresses>> we can see some of the different states that are possible.
На <<_add_email_addresses>> ми можемо бачити декілька можливих станів адреси.
//The top address is verified and set as the primary address, meaning that is where you'll get any notifications and receipts.
Верхня адреса перевірена та призначена головною, тобто до цієї адреси надсилають усі повідомлення та квитанції.
//The second address is verified and so can be set as the primary if you wish to switch them.
Друга адреса перевірена, отже ви можете її призначити головною, якщо забажаєте їх поміняти місцями.
//The final address is unverified, meaning that you can't make it your primary address.
Остання адреса не перевірена, отже ви не можете зробити її головною.
//If GitHub sees any of these in commit messages in any repository on the site, it will be linked to your user now.
Якщо GitHub побачить будь-яку з цих адрес у повідомленні коміту в будь-якому сховищі на сайті, це повідомлення буде пов’язано з вашим користувачем.

//==== Two Factor Authentication
==== Двох-Крокова Авторизація

//Finally, for extra security, you should definitely set up Two-factor Authentication or ``2FA''.
Нарешті, для більшої безпеки, вам безумовно слід налаштувати Двох-Крокову Авторизацію чи ``2FA'' (Two-factor Authentication).
//Two-factor Authentication is an authentication mechanism that is becoming more and more popular recently to mitigate the risk of your account being compromised if your password is stolen somehow.
Двох-Крокова Авторизація - це механізм авторизації, що наразі стає все більш популярним задля зменшення ризиків крадіжки вашого паролю або того, що хтось буде діяти під вашим обліковим записом.
//Turning it on will make GitHub ask you for two different methods of authentication, so that if one of them is compromised, an attacker will not be able to access your account.
Якщо ви її ввімкнете, GitHub буде потребувати два різних методи авторизації, отже якщо один з них був зламаний, зловмисник все одно не зможе отримати доступ до вашого облікового запису.

//You can find the Two-factor Authentication setup under the Security tab of your Account settings.
Ви можете знайти опції Двох-Крокової Авторизації у вкладці Security (безпека) налаштувань вашого облікового запису.

//.2FA in the Security Tab
.2FA у вкладці Безпеки
image::images/2fa-1.png[2FA у вкладці Безпеки]

//If you click on the ``Set up two-factor authentication'' button, it will take you to a configuration page where you can choose to use a phone app to generate your secondary code (a ``time based one-time password''), or you can have GitHub send you a code via SMS each time you need to log in.
Якщо ви клацнете на кнопку ``Set up two-factor authentication'' (Налаштувати двох-крокову авторизацію), ви перейдете на сторінку конфігурації, де ви зможете вибрати використовувати програму для телефону для генерації другого коду (``time based one-time password'' - оснований на часі одноразовий пароль), або GitHub може відправляти вам код через SMS щоразу, коли вам треба ввійти в систему.

//After you choose which method you prefer and follow the instructions for setting up 2FA, your account will then be a little more secure and you will have to provide a code in addition to your password whenever you log into GitHub.
Після вибору методу, що вам подобається, та виконання інструкції з налаштування 2FA, ваш обліковий запис буде трохи більш безпечним, та вам доведеться вводити код на додаток до паролю щоразу ви заходите на GitHub.
