=== GitWeb

(((serving repositories, GitWeb)))(((GitWeb)))
//Now that you have basic read/write and read-only access to your project, you may want to set up a simple web-based visualizer.
Тепер, коли у вас є базовий доступ до вашого проекту з правом читання та з правами на читання та запис, можливо ви бажаєте налаштувати простий візуалізатор через веб.
//Git comes with a CGI script called GitWeb that is sometimes used for this.
Git поставляє CGI скрипт GitWeb, який іноді для цього використовують.

[[gitweb]]
//.The GitWeb web-based user interface.
.Веб інтерфейс користувача за допомогою GitWeb
//image::images/git-instaweb.png[The GitWeb web-based user interface.]
image::images/git-instaweb.png[Веб інтерфейс користувача за допомогою GitWeb.]

If you want to check out what GitWeb would look like for your project, Git comes with a command to fire up a temporary instance if you have a lightweight server on your system like `lighttpd` or `webrick`.
Якщо ви бажаєте подивитись, як виглядає GitWeb для вашого проекту, Git має команду для запуску тимчасового прикладу, якщо у вас є легкий сервер на системі, наприклад `lighttpd` або `webrick`.
//On Linux machines, `lighttpd` is often installed, so you may be able to get it to run by typing `git instaweb` in your project directory.
На машинах Linux часто є `lighttpd`, отже ви може швидко його запустити, якщо наберете `git instaweb` у теці вашого проекту.
//If you're running a Mac, Leopard comes preinstalled with Ruby, so `webrick` may be your best bet.
Якщо ви використовуєте Mac, Leopard одразу має Ruby, отже `webrick` має бути найпростіше запустити.
//To start `instaweb` with a non-lighttpd handler, you can run it with the `--httpd` option.(((git commands, instaweb)))
Щоб запустити `instaweb` не з lighttpd сервером, передайте бажане ім’я серверу опції `--httpd`.(((git commands, instaweb)))

[source,console]
----
$ git instaweb --httpd=webrick
[2009-02-21 10:02:21] INFO  WEBrick 1.3.1
[2009-02-21 10:02:21] INFO  ruby 1.8.6 (2008-03-03) [universal-darwin9.0]
----

//That starts up an HTTPD server on port 1234 and then automatically starts a web browser that opens on that page.
Ця команда запускає HTTPD сервер на порту 1234 та автоматично запускає веб-оглядач, що відразу покаже цю сторінку.
//It's pretty easy on your part.
Вам майже нічого не треба робити.
//When you're done and want to shut down the server, you can run the same command with the `--stop` option:
Коли ви закінчили та бажаєте вимкнути сервер, ви можете виконати таку ж команду з опцією `--stop`:

[source,console]
----
$ git instaweb --httpd=webrick --stop
----

//If you want to run the web interface on a server all the time for your team or for an open source project you're hosting, you'll need to set up the CGI script to be served by your normal web server.
Якщо ви бажаєте, щоб веб інтерфейс працював на сервері весь час для вашої команди чи для проекту з відкритим кодом, для якого ви керуєте хостингом, вам треба встановити CGI скрипт, щоб він працював на вашому звичайному веб сервері.
//Some Linux distributions have a `gitweb` package that you may be able to install via `apt` or `yum`, so you may want to try that first.
Деякі дистрибутиви Linux мають пакет `gitweb`, який ви можливо можете встановити за допомогою `apt` або `yum`, отже можливо варто спочатку спробувати ці команди.
//We'll walk through installing GitWeb manually very quickly.
Ми дуже швидко розглянемо встановлення GitWeb вручну.
//First, you need to get the Git source code, which GitWeb comes with, and generate the custom CGI script:
Спочатку треба отримати програмний код Git, в якому є і код GitWeb, та згенерувати власний CGI скрипт:

[source,console]
----
$ git clone git://git.kernel.org/pub/scm/git/git.git
$ cd git/
$ make GITWEB_PROJECTROOT="/opt/git" prefix=/usr gitweb
    SUBDIR gitweb
    SUBDIR ../
make[2]: `GIT-VERSION-FILE' is up to date.
    GEN gitweb.cgi
    GEN static/gitweb.js
$ sudo cp -Rf gitweb /var/www/
----

//Notice that you have to tell the command where to find your Git repositories with the `GITWEB_PROJECTROOT` variable.
Зауважте, що ви маєте вказати цій команді, де розташовані ваші сховища Git за допомогою змінної змінної `GITWEB_PROJECTROOT`.
//Now, you need to make Apache use CGI for that script, for which you can add a VirtualHost:
Тепер вам треба щоб Apache використовувати CGI для цього скрипту, що можна зробити за допомогою VirtualHost:

[source,console]
----
<VirtualHost *:80>
    ServerName gitserver
    DocumentRoot /var/www/gitweb
    <Directory /var/www/gitweb>
        Options ExecCGI +FollowSymLinks +SymLinksIfOwnerMatch
        AllowOverride All
        order allow,deny
        Allow from all
        AddHandler cgi-script cgi
        DirectoryIndex gitweb.cgi
    </Directory>
</VirtualHost>
----

//Again, GitWeb can be served with any CGI or Perl capable web server; if you prefer to use something else, it shouldn't be difficult to set up.
Як і попередній CGI скрипт, GitWeb може працювати на будь-якому здатному на CGI або Perl веб сервері. Якщо ви хочете використовувати щось інше, налаштування має бути легким.
//At this point, you should be able to visit `http://gitserver/` to view your repositories online.
Тепер ви можете зайти до `http://gitserver/` та побачити ваші сховища.
