//=== Git Daemon
=== Демон Git

(((serving repositories, git protocol)))
//Next we'll set up a daemon serving repositories over the ``Git'' protocol. This is common choice for fast, unauthenticated access to your Git data. Remember that since it's not an authenticated service, anything you serve over this protocol is public within its network.
Тепер встановимо демон, що надає доступ до сховищ через протокол ``Git''. Це поширений вибір для швидкого, неавторизовоного доступу до ваших даних Git. Пам'ятайте, що оскільки він не авторизований, все до чого ви надаєте доступ за допомогою цього протоколу стає загальнодоступним у його мережі.

//If you're running this on a server outside your firewall, it should only be used for projects that are publicly visible to the world.
Якщо сервер працює за межами вашого мережевого фільтру, він має використовуватись виключно для проектів, що є загальнодоступними для світу.
//If the server you're running it on is inside your firewall, you might use it for projects that a large number of people or computers (continuous integration or build servers) have read-only access to, when you don't want to have to add an SSH key for each.
Якщо ж сервер працює в межах мережевого фільтру, ви можете використовувати його для проектів, до яких велика кількість людей або комп’ютерів (наприклад сервери компіляції чи інтеграції) мають доступ тільки на читання, але ви не хочете додавати ключ SSH для кожного з них.

//In any case, the Git protocol is relatively easy to set up.
У будь-якому разі, протокол Git легко налаштувати.
//Basically, you need to run this command in a daemonized manner:(((git commands, daemon)))
Вам просто треба виконати цю команду так, щоби вона працювала як демон:(((git commands, daemon)))

[source,console]
----
git daemon --reuseaddr --base-path=/opt/git/ /opt/git/
----

//`--reuseaddr` allows the server to restart without waiting for old connections to time out, the `--base-path` option allows people to clone projects without specifying the entire path, and the path at the end tells the Git daemon where to look for repositories to export.
`--reuseaddr` дозволяє серверу себе перезапускати без очікування, доки старі з’єднання спливуть (time out), опція `--base-path` дозволяє клонувати сховища за допомогою шляху відносно значення цієї опції замість повного шляху.
//If you're running a firewall, you'll also need to punch a hole in it at port 9418 on the box you're setting this up on.
Якщо у вас працює мережевий фільтр, ви також маєте дозволити передачу через порт 9418 машини з Git сервером.

//You can daemonize this process a number of ways, depending on the operating system you're running.
Запустити цю команду як демон можна декількома шляхами, в залежності від вашої операційної системи.
//On an Ubuntu machine, you can use an Upstart script.
Під Ubuntu, ви можете використати скрипт Upstart.
//So, in the following file
Отже, у файл

[source,console]
----
/etc/event.d/local-git-daemon
----

//you put this script:
додайте такий скрипт:

[source,console]
----
start on startup
stop on shutdown
exec /usr/bin/git daemon \
    --user=git --group=git \
    --reuseaddr \
    --base-path=/opt/git/ \
    /opt/git/
respawn
----

//For security reasons, it is strongly encouraged to have this daemon run as a user with read-only permissions to the repositories – you can easily do this by creating a new user 'git-ro' and running the daemon as them.
З причин безпеки, ми заохочуємо вас запускати цей демон тільки з користувача, що має доступ тільки на читання сховищ – це легко зробити, створивши нового користувача 'git-ro' та запустивши демон з нього.
//For the sake of simplicity we'll simply run it as the same 'git' user that `git-shell` is running as.
Для простоти ми просто запустимо його з нашого користувача `git`, з якого працює і `git-shell`.

//When you restart your machine, your Git daemon will start automatically and respawn if it goes down.
Коли ви перезавантажите свою машину, демон Git автоматично запуститься та буде сам перезапускатися, якщо він впаде.
//To get it running without having to reboot, you can run this:
Щоб запустити його без перезапуску, ви можете виконати:

[source,console]
----
initctl start local-git-daemon
----

//On other systems, you may want to use `xinetd`, a script in your `sysvinit` system, or something else – as long as you get that command daemonized and watched somehow.
На інших системах, ви можете використати `xinetd`, скрипт у теці системи `sysvinit`, чи щось інше – головне щоб команда запускалась як демон, та можна було перевіряти її статус.

//Next, you have to tell Git which repositories to allow unauthenticated Git server-based access to. You can do this in each repository by creating a file name `git-daemon-export-ok`.
Далі, вам треба сказати Git, до яких сховищ дозволяти неавторизований доступ за допомогою сервера Git. Ви можете зробити це в кожному сховищі за допомогою створення файлу під назвою `git-daemon-export-ok`.

[source,console]
----
$ cd /path/to/project.git
$ touch git-daemon-export-ok
----

//The presence of that file tells Git that it's OK to serve this project without authentication.
Присутність цього файлу каже Git, що він може роздавати цей проект без авторизації.
