[[_first_time]]
=== Початкове налаштування Git

Зараз, коли у ви вже маете Git у системі, можливо, ви захочете зробити декілька речей, щоб налаштувати ваше Git середовище.
Це потрібно виконати лише один раз - налаштування залишаються між оновленями.
Ви також можете змінити їх в будь-який час, знову виконавши декілька команд.

До Git входить утиліта яка має назву `git config`, яка дозволяє отримати чи встановити параметри, що контролюють усіма аспектами того, як Git виглядає чи працює.
Ці параметри можуть бути збережені в трьох різних місцях:

1. Файл `/etc/gitconfig` містить значення для кожного користувача в системі і всіх їх репозиторіїв.
  Якщо ви передаєте опцію `--system` при виконанні `git config`, параметри читаються та пишуться з цього файлу.

2. Файл ’~/.gitconfig’ або ’~/.config/git/config’ - характерні для вашого користувача.
  Ви можете налаштувати Git читати і писати в цей файл, вказуючи опцію `--global.`
  
3. Файл `config` в каталозі Git (тобто `.git/config`) у тому репозиторії, який ви використовуєте в даний момент, зберігає налаштування конкретного репозиторію.

Кожен рівень має пріоритет над налаштуваннями в попередньому рівні, тобто параметри в `.git/config` перевизначають параметри в `/etc/gitconfig`.

У системах Windows, Git шукає файл `.gitconfig` в каталозі `$HOME` (`C:\Users\$USER` для більшості користувачів).
Він також шукає файл для `/etc/gitconfig`, хоча відносно кореня MSys, котрий знаходиться там, де ви вирішили встановити Git у вашій Windows системі, коли ви запускали інсталяцію.

==== Ім'я користувача

Перше, що ви повинні зробити, коли ви інсталюєте Git - цє встановити ім'я користувача та адресу електронної пошти.
Це важливо, тому що кожен комміт в Git використовує цю інформацію, і вона незмінно включена у комміти, які ви робите:

[source,console]
----
$ git config --global user.name "John Doe"
$ git config --global user.email johndoe@example.com
----

Знову ж таки, якщо ви передаєте опцію `--global`, ці налаштування потрібно зробити тільки один раз, тоді Git завжди буде використовувати цю інформацію для всього, що ви робите у цій системі.
Якщо ви хочете, перевизначити ім'ям або адресу електронної пошти для конкретних проектів, ви можете виконати цю ж команду без опції `--global`, в каталозі необхідного проекту.

Багато з графічних інструментів допомогають зробити це при першому запуску.

==== Редактор

Now that your identity is set up, you can configure the default text editor that will be used when Git needs you to type in a message.
If not configured, Git uses your system's default editor, which is generally Vim.
If you want to use a different text editor, such as Emacs, you can do the following:

[source,console]
----
$ git config --global core.editor emacs
----

[WARNING]
====
Vim and Emacs are popular text editors often used by developers on Unix based systems like Linux and Mac. If you are not familiar with either of these editors or are on a Windows system, you may need to search for instructions for how to set up your favorite editor with Git.  
If you don't set an editor like this and you don't know what Vim or Emacs are, you will likely get into a really confusing state when they are launched.
====

==== Checking Your Settings

If you want to check your settings, you can use the `git config --list` command to list all the settings Git can find at that point:

[source,console]
----
$ git config --list
user.name=John Doe
user.email=johndoe@example.com
color.status=auto
color.branch=auto
color.interactive=auto
color.diff=auto
...
----

You may see keys more than once, because Git reads the same key from different files (`/etc/gitconfig` and `~/.gitconfig`, for example).
In this case, Git uses the last value for each unique key it sees.

You can also check what Git thinks a specific key's value is by typing `git config <key>`:(((git commands, config)))

[source,console]
----
$ git config user.name
John Doe
----
